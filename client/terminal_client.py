# client/terminal_client.py
import pyaudio
import websocket
import threading
import time
import sys

# --- ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥ï‡µã‡µ∫‡¥´‡¥ø‡¥ó‡¥±‡µá‡¥∑‡¥®‡µÅ‡¥ï‡µæ (Audio Configurations) ---
# PyAudio ‡¥á‡µª‡¥™‡µÅ‡¥ü‡µç‡¥ü‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡µç‡¥•‡¥ø‡¥∞‡¥Æ‡¥æ‡¥Ø ‡¥ï‡µã‡µ∫‡¥´‡¥ø‡¥ó‡¥±‡µá‡¥∑‡¥®‡µÅ‡¥ï‡µæ
CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 16000 # Gemini API ‡¥™‡µç‡¥∞‡¥§‡µÄ‡¥ï‡µç‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥á‡µª‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç Sample Rate

# Gemini API-‡¥Ø‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥≤‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥î‡¥ü‡µç‡¥ü‡µç‡¥™‡µÅ‡¥ü‡µç‡¥ü‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥ Sample Rate
# (‡¥á‡¥§‡µç ‡¥∏‡¥æ‡¥ß‡¥æ‡¥∞‡¥£‡¥Ø‡¥æ‡¥Ø‡¥ø 24000Hz ‡¥Ü‡¥£‡µç)
GEMINI_OUTPUT_RATE = 24000 

# --- WebSocket ‡¥ï‡µã‡µ∫‡¥´‡¥ø‡¥ó‡¥±‡µá‡¥∑‡µª ---
WS_URL = "ws://127.0.0.1:5000/connect"

# PyAudio ‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡µª‡¥∏‡µç
p = pyaudio.PyAudio()

# ‡¥ó‡µç‡¥≤‡µã‡¥¨‡µΩ ‡¥∏‡µç‡¥±‡µç‡¥±‡µá‡¥±‡µç‡¥±‡µÅ‡¥ï‡µæ
ws_connected = threading.Event()

# --------------------------
# 1. ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Æ‡µÅ‡¥ï‡µæ ‡¥∏‡¥ú‡µç‡¥ú‡¥Æ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
# --------------------------

try:
    # PyAudio ‡¥á‡µª‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Ç (‡¥Æ‡µà‡¥ï‡µç‡¥∞‡µã‡¥´‡µã‡µ∫)
    stream_in = p.open(format=FORMAT,
                        channels=CHANNELS,
                        rate=RATE,
                        input=True,
                        frames_per_buffer=CHUNK,
                        input_device_index=None) # ‡¥ì‡¥ü‡µç‡¥ü‡µã‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç ‡¥Ü‡¥Ø‡¥ø ‡¥°‡¥ø‡¥´‡µã‡µæ‡¥ü‡µç‡¥ü‡µç ‡¥á‡µª‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç ‡¥â‡¥™‡¥ï‡¥∞‡¥£‡¥Ç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
    
    # PyAudio ‡¥î‡¥ü‡µç‡¥ü‡µç‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Ç (‡¥∏‡µç‡¥™‡µÄ‡¥ï‡µç‡¥ï‡µº ‡¥™‡µç‡¥≤‡µá‡¥¨‡¥æ‡¥ï‡µç‡¥ï‡µç)
    stream_out = p.open(format=FORMAT,
                         channels=CHANNELS,
                         rate=GEMINI_OUTPUT_RATE, 
                         output=True,
                         frames_per_buffer=CHUNK,
                         output_device_index=None) # ‡¥ì‡¥ü‡µç‡¥ü‡µã‡¥Æ‡¥æ‡¥±‡µç‡¥±‡¥ø‡¥ï‡µç ‡¥Ü‡¥Ø‡¥ø ‡¥°‡¥ø‡¥´‡µã‡µæ‡¥ü‡µç‡¥ü‡µç ‡¥î‡¥ü‡µç‡¥ü‡µç‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç ‡¥â‡¥™‡¥ï‡¥∞‡¥£‡¥Ç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ

    print(f"--- ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Æ‡µÅ‡¥ï‡µæ ‡¥∏‡¥ú‡µç‡¥ú‡¥Æ‡¥æ‡¥ï‡µç‡¥ï‡¥ø (Mic: {RATE}Hz, Speaker: {GEMINI_OUTPUT_RATE}Hz) ---")

except Exception as e:
    print(f"\n[ERROR]: PyAudio ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Ç ‡¥§‡µÅ‡¥±‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡µΩ ‡¥™‡¥ø‡¥∂‡¥ï‡µç: {e}")
    print("‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç PyAudio, PortAudio ‡¥≤‡µà‡¥¨‡µç‡¥∞‡¥±‡¥ø‡¥ï‡µæ ‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡¥æ‡µæ ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥£‡µç‡¥ü‡µÜ‡¥®‡µç‡¥®‡µç ‡¥â‡¥±‡¥™‡µç‡¥™‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥ï.")
    sys.exit(1)


# --------------------------
# 2. ‡¥Æ‡µà‡¥ï‡µç‡¥∞‡µã‡¥´‡µã‡µ∫ ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥Ö‡¥Ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥§‡µç‡¥∞‡µÜ‡¥°‡µç
# --------------------------

def audio_thread_function(ws):
    """‡¥Æ‡µà‡¥ï‡µç‡¥∞‡µã‡¥´‡µã‡¥£‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥±‡µÄ‡¥°‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç WebSocket ‡¥µ‡¥¥‡¥ø ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥ï‡¥Ø‡µÅ‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ."""
    print("üé§ ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Æ‡¥ø‡¥Ç‡¥ó‡µç ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥∏‡¥Ç‡¥∏‡¥æ‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï...")
    
    while ws_connected.is_set():
        try:
            # ‡¥Æ‡µà‡¥ï‡µç‡¥∞‡µã‡¥´‡µã‡¥£‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥°‡¥æ‡¥±‡µç‡¥± ‡¥±‡µÄ‡¥°‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ
            audio_data = stream_in.read(CHUNK, exception_on_overflow=False)
            
            # WebSocket ‡¥µ‡¥¥‡¥ø ‡¥∏‡µÜ‡µº‡¥µ‡¥±‡¥ø‡¥≤‡µá‡¥ï‡µç‡¥ï‡µç ‡¥Ö‡¥Ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            if ws.connected:
                ws.send(audio_data, opcode=websocket.ABNF.OPCODE_BINARY)
            
        except IOError as e:
            # ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥ì‡¥µ‡µº‡¥´‡µç‡¥≤‡µã ‡¥™‡µã‡¥≤‡µÅ‡¥≥‡µç‡¥≥ ‡¥™‡¥ø‡¥∂‡¥ï‡µÅ‡¥ï‡µæ ‡¥∏‡¥æ‡¥ß‡¥æ‡¥∞‡¥£‡¥Æ‡¥æ‡¥£‡µç, ‡¥Ö‡¥µ ‡¥í‡¥¥‡¥ø‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            if 'Input overflowed' in str(e):
                continue
            print(f"‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥§‡µç‡¥∞‡µÜ‡¥°‡µç ‡¥™‡¥ø‡¥∂‡¥ï‡µç: {e}")
            break
        except Exception as e:
            print(f"‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥§‡µç‡¥∞‡µÜ‡¥°‡µç ‡¥™‡¥ø‡¥∂‡¥ï‡µç: {e}")
            break
            
    print("üé§ ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥á‡µª‡¥™‡µÅ‡¥ü‡µç‡¥ü‡µç ‡¥∏‡µç‡¥ü‡µç‡¥∞‡µÄ‡¥Ç ‡¥®‡¥ø‡µº‡¥§‡µç‡¥§‡µÅ‡¥®‡µç‡¥®‡µÅ.")


# --------------------------
# 3. WebSocket ‡¥∏‡µç‡¥µ‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥´‡¥Ç‡¥ó‡µç‡¥∑‡¥®‡µÅ‡¥ï‡µæ
# --------------------------

def on_message(ws, message):
    """‡¥∏‡µÜ‡µº‡¥µ‡¥±‡¥ø‡µΩ ‡¥®‡¥ø‡¥®‡µç‡¥®‡µç ‡¥°‡¥æ‡¥±‡µç‡¥± ‡¥∏‡µç‡¥µ‡µÄ‡¥ï‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ."""
    if isinstance(message, bytes):
        # ‡¥ú‡µÜ‡¥Æ‡¥ø‡¥®‡¥ø‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£‡¥Ç (Binary data)
        try:
            stream_out.write(message)
        except IOError as e:
            # ‡¥™‡µç‡¥≤‡µá‡¥¨‡¥æ‡¥ï‡µç‡¥ï‡µç ‡¥™‡¥ø‡¥∂‡¥ï‡µÅ‡¥ï‡µæ ‡¥í‡¥¥‡¥ø‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            if 'Output overflowed' in str(e):
                return
            print(f"‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥™‡µç‡¥≤‡µá‡¥¨‡¥æ‡¥ï‡µç‡¥ï‡µç ‡¥™‡¥ø‡¥∂‡¥ï‡µç: {e}")
            
    else:
        # ‡¥ü‡µÜ‡¥ï‡µç‡¥∏‡µç‡¥±‡µç‡¥±‡µç ‡¥°‡¥æ‡¥±‡µç‡¥± (‡¥ü‡µç‡¥∞‡¥æ‡µª‡¥∏‡µç‡¥ï‡µç‡¥∞‡¥ø‡¥™‡µç‡¥±‡µç‡¥±‡µç ‡¥Ö‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥∏‡µç‡¥ü‡µç‡¥∞‡¥ø‡¥Ç‡¥ó‡µç ‡¥™‡µç‡¥∞‡¥§‡¥ø‡¥ï‡¥∞‡¥£‡¥Ç)
        try:
            text = message.decode('utf-8')
            print(f"\n{text}", end="", flush=True) # ‡¥≤‡µà‡¥µ‡µç ‡¥Ü‡¥Ø‡¥ø ‡¥™‡µç‡¥∞‡¥ø‡µª‡µç‡¥±‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ
        except Exception:
            # ‡¥°‡µÄ‡¥ï‡µã‡¥°‡¥ø‡¥Ç‡¥ó‡¥ø‡µΩ ‡¥™‡¥ø‡¥∂‡¥ï‡µÅ‡¥£‡µç‡¥ü‡¥æ‡¥Ø‡¥æ‡µΩ
            print(f"\n[Received]: {message}")


def on_error(ws, error):
    """WebSocket ‡¥™‡¥ø‡¥∂‡¥ï‡µÅ‡¥ï‡µæ ‡¥ï‡µà‡¥ï‡¥æ‡¥∞‡µç‡¥Ø‡¥Ç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ."""
    print(f"\n[ERROR]: WebSocket ‡¥™‡¥ø‡¥∂‡¥ï‡µç: {error}")
    ws_connected.clear()


def on_close(ws, close_code, reason):
    """WebSocket ‡¥Ö‡¥ü‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ."""
    print(f"\n--- ‡¥ï‡¥£‡¥ï‡µç‡¥∑‡µª ‡¥ï‡µç‡¥≤‡µã‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§‡µÅ (Code: {close_code}, Reason: {reason}) ---")
    ws_connected.clear()


def on_open(ws):
    """WebSocket ‡¥§‡µÅ‡¥±‡¥ï‡µç‡¥ï‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ."""
    print(f"--- WebSocket ‡¥ï‡¥£‡¥ï‡µç‡¥∑‡µª ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Ç: {WS_URL} ---")
    ws_connected.set()
    
    # ‡¥ï‡¥£‡¥ï‡µç‡¥∑‡µª ‡¥§‡µÅ‡¥±‡¥®‡µç‡¥® ‡¥∂‡µá‡¥∑‡¥Ç ‡¥ì‡¥°‡¥ø‡¥Ø‡µã ‡¥Ö‡¥Ø‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥® ‡¥§‡µç‡¥∞‡µÜ‡¥°‡µç ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
    audio_thread = threading.Thread(target=audio_thread_function, args=(ws,))
    audio_thread.start()


# --------------------------
# 4. ‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥®‡¥ô‡µç‡¥ô‡µæ
# --------------------------

if __name__ == "__main__":
    print(f"Gemini Live ‡¥ï‡µ∫‡¥∏‡µã‡µæ ‡¥ï‡µç‡¥≤‡¥Ø‡¥ø‡µª‡µç‡¥±‡µç: {WS_URL}-‡¥≤‡µá‡¥ï‡µç‡¥ï‡µç ‡¥ï‡¥£‡¥ï‡µç‡¥ü‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡µª ‡¥∂‡µç‡¥∞‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ...")
    
    # WebSocket ‡¥ï‡µç‡¥≤‡¥Ø‡¥ø‡µª‡µç‡¥±‡µç ‡¥á‡µª‡¥∏‡µç‡¥±‡µç‡¥±‡µª‡¥∏‡µç ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
    ws = websocket.WebSocketApp(WS_URL,
                              on_open=on_open,
                              on_message=on_message,
                              on_error=on_error,
                              on_close=on_close)
    
    # WebSocket ‡¥±‡¥£‡µç‡¥£‡¥ø‡¥Ç‡¥ó‡µç ‡¥Ü‡¥∞‡¥Ç‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ (‡¥í‡¥∞‡µÅ ‡¥¨‡¥æ‡¥ï‡µç‡¥ï‡µç‡¥ó‡µç‡¥∞‡µó‡¥£‡µç‡¥ü‡µç ‡¥§‡µç‡¥∞‡µÜ‡¥°‡¥ø‡µΩ ‡¥±‡µ∫ ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ)
    ws_thread = threading.Thread(target=ws.run_forever)
    ws_thread.daemon = True
    ws_thread.start()

    try:
        # ‡¥Æ‡µÜ‡¥Ø‡¥ø‡µª ‡¥§‡µç‡¥∞‡µÜ‡¥°‡µç WebSocket ‡¥ï‡µç‡¥≤‡µã‡¥∏‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥µ‡¥∞‡µÜ ‡¥™‡µç‡¥∞‡¥µ‡µº‡¥§‡µç‡¥§‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
        while ws_connected.is_set() or ws_thread.is_alive():
            time.sleep(0.1)
    except KeyboardInterrupt:
        print("\n‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡µç‡¥≤‡¥Ø‡¥ø‡µª‡µç‡¥±‡µç ‡¥®‡¥ø‡µº‡¥§‡µç‡¥§‡¥æ‡µª ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü‡µÅ (Ctrl+C).")
    
    finally:
        # ‡¥ï‡µç‡¥≤‡µÄ‡¥®‡¥™‡µç‡¥™‡µç
        print("‡¥ï‡µç‡¥≤‡µÄ‡¥®‡¥™‡µç‡¥™‡µç...")
        ws_connected.clear()
        stream_in.stop_stream()
        stream_in.close()
        stream_out.stop_stream()
        stream_out.close()
        p.terminate()
        ws.close()
        print("‡¥ï‡µç‡¥≤‡¥Ø‡¥ø‡µª‡µç‡¥±‡µç ‡¥µ‡¥ø‡¥ú‡¥Ø‡¥ï‡¥∞‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥Ö‡¥ü‡¥ö‡µç‡¥ö‡µÅ.")